"use babel";
// @flow

import type {
  ConfigSchemaPart
} from "../../PlanConfigurationFeature/Types/types.js.flow";
import type {
  Strategy,
  Controller
} from "../../TaskExecutionFeature/Types/types.js.flow";
import type {
  PlanConfig
} from "../../PlanConfigurationFeature/Types/types.js.flow";
import type { Diagnostic, DiagnosticMode } from "../../DiagnosticsFeature/Types/types.js.flow";
import type {
  PackageTester
} from "../../../ProjectSystemEpic/PackageFeature/Types/types.js.flow";
import type {
  PluginDiagnostic
} from "../../DiagnosticsFeature/Types/types.js.flow";

export type ProvidedDevTool = {
  infos: {
    id?: string,
    name: string,
    iconUri: string,
    defaultDiagnosticsMode?: DiagnosticMode
  },
  configSchema: ConfigSchemaPart,
  getStrategyForPlan(plan: PlanConfig): {
    strategy: Strategy,
    controller: Controller
  },
  isPackage?: PackageTester
};

export type TaskAPI = {
  addDiagnostics: (
    diagnostics: Array<PluginDiagnostic>
  ) => void,
  cache: {
    push: (data: any, step?: boolean, ) => void,
    get: ({step?: ?number, excludeNullStep?: boolean}) => Array<any>,
  }
};
