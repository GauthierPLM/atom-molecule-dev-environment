"use babel";
// @flow

export type DiagnosticMode = "logs" | "organized";

export type DiagnosticError = 1;

export type DiagnosticWarning = 2;

export type DiagnosticInformation = 3;

export type DiagnosticHint = 4;

export type DiagnosticSuccess = 5;

export type DiagnosticSeverity =
  | DiagnosticError
  | DiagnosticWarning
  | DiagnosticInformation
  | DiagnosticHint
  | DiagnosticSuccess;

export type Position = {
  line: number,
  character: number,
};

export type DiagnosticRange = {
  start: Position,
  end: Position,
};

export type PluginDiagnostic = {
  severity: DiagnosticSeverity,
  message: string,
  code?: number | string,
  date?: number,
  range?: DiagnosticRange,
  path?: string,
};

export type Diagnostic = PluginDiagnostic & {
  step: number,
  task?: string,
};

export type PublishDiagnosticsParams = {
  uri: string,
  diagnostics: Array<PluginDiagnostic>,
};

export type BusyStateAPI = {
  switchToWaitingMode: () => void,
  switchToBusyMode: () => void,
};
